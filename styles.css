#map {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    bottom: 0;
    z-index: 1;
}

/* Add new styles for the opacity control */
.opacity-control {
    background: white;
    border-radius: 4px;
    box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
    margin-bottom: 1px !important;
    padding: 8px;
}

.opacity-control button {
    background: white;
    border: none;
    cursor: pointer;
    font-weight: 500;
    padding: 6px 12px;
    border-radius: 4px;
    transition: all 0.2s ease;
    width: 100%;
    text-align: left;
}

.opacity-control button:hover {
    background: #f0f0f0;
}

.source-control {
    border-top: 1px solid #e5e5e5;
    padding: 8px 12px;
    max-height: 500px;
    overflow: hidden;
    transition: all .2s ease-in-out;
    opacity: 1;
    margin-top: 0;
    padding: 12px;
    border-top: none;
}

.source-control.collapsed {
    max-height: 0;
    opacity: 0;
    padding: 0;
    border-top: none;
}

.source-control .title {
    font-size: 12px;
    color: #666;
    margin-bottom: 4px;
}

.radio-group {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.radio-label {
    display: flex;
    align-items: center;
    gap: 4px;
    font-size: 12px;
    color: #333;
    cursor: pointer;
}

.radio-label input[type="radio"] {
    margin: 0;
    cursor: pointer;
}

/* Add padding to prevent controls from sticking to the edge */
.mapboxgl-ctrl.opacity-control {
    margin: 0 0 0 10px;
    /* Remove bottom margin */
    width: 200px;
    /* Set fixed width for consistency */
}

/* Update the margin between controls */
.mapboxgl-ctrl.opacity-control+.mapboxgl-ctrl.opacity-control {
    margin-top: 1px;
    /* Reduce gap between controls */
    border-top: 1px solid #e5e5e5;
    /* Add separator */
    border-radius: 0 0 4px 4px;
    /* Round only bottom corners */
}

/* Style first control's bottom corners when second control is present */
.mapboxgl-ctrl.opacity-control:has(+ .mapboxgl-ctrl.opacity-control) {
    border-radius: 4px 4px 0 0;
    /* Round only top corners */
    margin-bottom: 0;
}

/* Add these styles to fix mobile viewport height */
html,
body {
    height: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden;
    position: relative;
    width: 100%;
}

/* Update the map container positioning */
#map {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}


/* Ensure attribution is visible */
.mapboxgl-ctrl-bottom-right {
    bottom: 0 !important;
    z-index: 2;
}

/* Update these styles */
html,
body {
    height: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden;
    position: relative;
    width: 100%;
}

/* Update main container */
main {
    height: calc(100% - 56px);
    width: 100%;
    position: relative;
    overflow: hidden;
}

/* Update map container */
#map {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}


/* Add these styles in your existing style section */
.mapboxgl-ctrl-icon svg {
    display: block;
    margin: 2px;
}

.mapboxgl-ctrl-icon {
    padding: 5px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.mapboxgl-ctrl-location {
    background: white;
    border: none;
    cursor: pointer;
    padding: 6px 10px;
    border-radius: 4px;
    font-size: 12px;
    color: #333;
    transition: background-color 0.2s;
}

.mapboxgl-ctrl-location:hover {
    background-color: #f0f0f0;
}

/* Add these to your existing styles */
.mapboxgl-ctrl-geolocate {
    display: flex !important;
    align-items: center;
    width: auto !important;
    min-width: 30px;
    white-space: nowrap;
}

.mapboxgl-ctrl-geolocate .mapboxgl-ctrl-icon {
    margin-right: 0;
    width: 20px;
    height: 20px;
}

.mapboxgl-ctrl-group {
    width: auto !important;
}

.mapboxgl-ctrl-group button {
    background-color: white;
}
.mapboxgl-ctrl button:not(:disabled):hover {
    background-color: white;
}

/* Add new styles for layer group cards */
.layer-group {
    background: #d6d6d6;
    overflow: hidden;
    opacity: 0.8;
}
.layer-group:hover {
    background: #e8e8e8;
    opacity: 1;
}

.layer-group:last-child {
    margin-bottom: 0;
}

/* Update group header styles */
.group-header {
    display: flex;
    align-items: center;
    position: relative;
    min-height: 48px;
    border-radius: 4px;
    overflow: hidden;
}

/* Style the checkbox for consistent appearance across systems */
.group-header input[type="checkbox"] {
    margin: 0;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: 16px;
    height: 16px;
    border: 1px solid hsl(0, 0%, 100%);
    border-radius: 3px;
    position: relative;
    cursor: pointer;
}

.group-header input[type="checkbox"]:checked {
    background-color: hsl(0, 0%, 100%);
    border: 2px solid hsl(0, 0%, 100%);

    border-color: hsl(0, 0%, 100%);
}

.group-header input[type="checkbox"]:checked::after {
    content: '';
    position: absolute;
    left: 4px;
    top: 1px;
    width: 5px;
    height: 9px;
    border: solid #050505;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
}

/* Add styles for the layer info section */
.layer-info {
    font-size: 0.75rem;
    color: #666;
    margin-top: 2px;
}

.layer-info a {
    color: #666;
    text-decoration: none;
}

.layer-info a:hover {
    text-decoration: underline;
}

/* Add existing styles from index.html */
.layer-control-wrapper {
    position: relative;
    margin: 0;
    z-index: 1;
}

.mapboxgl-ctrl.layer-control {
    width: 400px;
    background: #ffffff11;
    margin: 0;
    padding: 0 0 0 55px;
    transition: transform 0.2s ease;
    overflow-y: auto;
    max-height: calc(100vh - 180px);
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
}
button.layer-control-toggle {
    width: 50px;
    height: 50px;
}
.layer-control-toggle {
    position: absolute;
    top: 0;
    left: 0;
    width: 50px;
    height: 50px;
    padding: 0;
    background: #fff;
    border: none;
    border-radius: 4px;
    box-shadow: 0 0 0 2px rgba(0,0,0,0.1);
    cursor: pointer;
    font-size: 18px;
    color: #333;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    z-index: 2;
}

.layer-control-toggle:hover {
    background: #f8f8f8;
}

.layer-control-toggle.is-open {
    background: #f8f8f8;
    color: #000;
}

.mapboxgl-ctrl.layer-control.no-transition {
    transition: none !important;
}

.mapboxgl-ctrl.layer-control.collapsed {
    transform: translateX(-420px);
}

@media (min-width: 768px) {
    .layer-control-wrapper {
        margin: 10px 0 0 10px;
    }
    
    .mapboxgl-ctrl.layer-control {
        max-width: 400px;
    }
}

/* Update header font style */
header h1 {
    font-family: 'Open Sans', sans-serif;
    font-weight: 600;  /* Semi-bold weight */
}

/* Add new style for close state */
.layer-control-toggle.is-open {
    font-size: 20px;  /* Slightly smaller for the Ã— symbol */
}

/* Popup styles */
.mapboxgl-popup-content {
    padding: 0;
    border-radius: 2px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.08);
    background: white;
    position: relative;
    overflow: hidden;
}

/* Ensure text remains readable over the background image */
.map-popup {
    position: relative;
    z-index: 1;
    background: transparent;
}

.mapboxgl-popup-close-button {
    padding: 0;
    width: 24px;
    height: 24px;
    color: #666;
    font-size: 16px;
    right: 6px;
    top: 6px;
    z-index: 2;
    background: none;
}

.mapboxgl-popup-close-button:hover {
    background: none;
    color: #000;
}

/* Hover popup styles */
.hover-popup .mapboxgl-popup-content {
    background: white;
    color: black;
    padding: 4px 8px;
    font-size: 12px;
    border-radius: 2px;
}

.hover-popup .mapboxgl-popup-tip {
    border-top-color: white;
}

/* Ensure text is black in both hover and active popups */
.map-popup .text-sm,
.map-popup .text-2xl,
.hover-popup .text-sm {
    color: black !important;
}

/* Update legend container styles */
.legend-container {
    border-top: 1px solid rgba(0,0,0,0.1);
    padding-top: 1rem;
    max-height: 300px; /* Limit maximum height */
    overflow: hidden;
    transition: max-height 0.3s ease;
}

/* Style the legend toggle button */
.legend-container button {
    font-size: 0.875rem;
    padding: 0.25rem 0;
    width: 100%;
    text-align: left;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

/* Style the legend icon */
.legend-container .legend-icon {
    display: inline-block;
    font-size: 0.75rem;
    transition: transform 0.2s ease;
    width: 16px;
    text-align: center;
}

/* Style the legend content wrapper */
.legend-content {
    overflow-y: auto;
    max-height: 250px; /* Limit scrollable area height */
    margin-right: -8px; /* Compensate for scrollbar */
    padding-right: 8px;
    scrollbar-width: thin;
    scrollbar-color: rgba(0,0,0,0.2) transparent;
}

/* Style the legend image */
.legend-content img {
    max-width: 100%;
    height: auto;
    margin-top: 0.5rem;
    border-radius: 4px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

/* Webkit scrollbar styles */
.legend-content::-webkit-scrollbar {
    width: 6px;
}

.legend-content::-webkit-scrollbar-track {
    background: transparent;
}

.legend-content::-webkit-scrollbar-thumb {
    background-color: rgba(0,0,0,0.2);
    border-radius: 3px;
}

/* When legend is hidden */
.legend-content.hidden {
    max-height: 0;
    margin-top: 0;
}

/* Modal styles */
.legend-modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.75);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
}

.legend-modal:not(.hidden) {
    opacity: 1;
    visibility: visible;
}

.legend-modal-content {
    background: white;
    padding: 1rem;
    border-radius: 8px;
    position: relative;
    max-width: 90vw;
    max-height: 90vh;
    overflow: auto;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.legend-modal-content img {
    display: block;
    max-width: 100%;
    height: auto;
}

.legend-modal-close {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    background: white;
    border: none;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    color: #666;
    transition: all 0.2s ease;
}

.legend-modal-close:hover {
    background: #f0f0f0;
    color: #000;
}

/* Update legend image cursor */
.legend-content img {
    cursor: pointer;
    transition: opacity 0.2s ease;
}

.legend-content img:hover {
    opacity: 0.9;
}

/* Update drawer styles to prevent closing on outside click */
sl-drawer::part(overlay) {
    background: none;
    pointer-events: none; /* Prevent overlay from capturing clicks */
}

sl-drawer::part(panel) {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(8px);
    border-right: 1px solid rgba(0, 0, 0, 0.1);
    width: 400px;
    z-index: 50;
}

/* Update opacity toggle button styles */
button.opacity-toggle {
    margin-left: auto !important;
    width: 20px !important;
    height: 20px !important;
    border-radius: 50% !important;
    padding: 0 !important;
    border: 2px solid #ddd !important;
    cursor: pointer !important;
    transition: all 0.2s ease !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    font-size: 0 !important;
    background: white !important;
}

button.opacity-toggle[data-opacity="0.5"] {
    background: #999 !important;
}

button.opacity-toggle:hover {
    border-color: #999 !important;
}

button.opacity-toggle.hidden {
    display: none !important;
}

/* Remove old opacity control styles */
.opacity-control {
    display: none;
}


/* Style all skeleton loaders in the drawer */
#layer-controls-loader sl-skeleton::part(base) {
    --border-radius: 0;
    height: 100px;
}

/* Add hover effect */
#layer-controls-loader sl-skeleton {
    opacity: 0.8;
}

#layer-controls-loader sl-skeleton:hover {
    opacity: 1;
}

/* Update drawer styles for contained mode */
sl-drawer::part(panel) {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(8px);
    border-right: 1px solid rgba(0, 0, 0, 0.1);
    width: 400px;
}

/* Ensure main container is properly positioned for contained drawer */

/* Update map container to be relative for drawer containment */
#map {
    width: 100%;
    height: 100%;
    position: relative;
}

sl-details.map-controls-group::part(base) {
    width: 100%;
}
sl-details.map-controls-group::part(content) {
    padding-top: 0;
}

/* Add styles to ensure proper spacing and scrolling for fog settings */
.fog-settings-content {
    max-height: 70vh; /* Limit maximum height */
    overflow-y: auto; /* Enable vertical scrolling if needed */
    padding-right: 8px; /* Add some padding for the scrollbar */
}

/* Add smooth scrolling for a better user experience */
.fog-settings-content {
    scroll-behavior: smooth;
}

/* Style the scrollbar for better visibility */
.fog-settings-content::-webkit-scrollbar {
    width: 6px;
}

.fog-settings-content::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 3px;
}

.fog-settings-content::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 3px;
}

.fog-settings-content::-webkit-scrollbar-thumb:hover {
    background: #555;
}

/* Style the terrain control container */
.terrain-control-container {
    max-height: 400px;  /* Set a maximum height */
    overflow-y: auto;   /* Enable vertical scrolling */
    padding-right: 12px; /* Add padding for scrollbar */
}

/* Style the terrain settings sections */
.terrain-settings-section {
    background: rgba(255, 255, 255, 0.8);
    border-radius: 4px;
    padding: 12px;
    margin-bottom: 12px;
}

/* Style the scrollbar */
.terrain-control-container::-webkit-scrollbar {
    width: 6px;
}

.terrain-control-container::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 3px;
}

.terrain-control-container::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 3px;
}

.terrain-control-container::-webkit-scrollbar-thumb:hover {
    background: #555;
}

/* Ensure proper spacing for controls */
.terrain-control-container .terrain-settings-section:last-child {
    margin-bottom: 0;
}

/* Style the fog settings checkbox area */
.terrain-control-container label.flex.items-center {
    padding: 8px;
    border-radius: 4px;
    background: rgba(255, 255, 255, 0.8);
    margin-bottom: 8px;
}

/* Style the input controls */
.terrain-control-container input[type="range"],
.terrain-control-container input[type="color"] {
    width: 100%;
    margin: 4px 0;
}

/* Style the color picker containers */
.terrain-control-container .flex.items-center {
    gap: 8px;
}

sl-details::part(base) {
    /* Remove focus ring */
    --sl-focus-ring: none;
    /* Remove any background color change on focus */
    background: transparent !important;
}

sl-details::part(header) {
    /* Remove padding from sl-details header */
    padding: 0;
    /* Remove any background color change on focus/active states */
    background: transparent !important;
    /* Ensure other header styles are preserved */
    display: flex;
    align-items: center;
    border-radius: inherit;
    user-select: none;
    -webkit-user-select: none;
    cursor: pointer;
}

sl-details::part(summary) {
    /* Remove any background highlight on focus/active states */
    background: transparent !important;
    /* Remove outline on focus */
    outline: none;
}

/* Add toast notification styles */
.toast-notification {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: #4CAF50;
    color: white;
    padding: 12px 24px;
    border-radius: 4px;
    z-index: 1000;
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.3s ease;
}

.toast-notification.show {
    opacity: 1;
    transform: translateY(0);
}

/* Add these attribution-specific styles */
.layer-attribution {
    font-size: 12px;
    color: #777;
    margin-top: 8px;
    border-radius: 4px;
}

.layer-attribution a {
    color: #0078A8;
    text-decoration: none;
}

.layer-attribution a:hover {
    text-decoration: underline;
}

/* Ensure attribution container is visible */
.description-area {
    padding: 8px 12px;
}

sl-details.map-controls-group::part(header) {
    padding: 0;
}

/* Update basemap control to overlay control */
.overlay-control {
    background: rgba(255, 255, 255, 0.9);
    padding: 12px;
    margin-bottom: 16px;
    border-radius: 4px;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.overlay-control label {
    display: flex;
    align-items: center;
    gap: 8px;
    cursor: pointer;
}

.overlay-control input[type="checkbox"] {
    margin: 0;
    cursor: pointer;
}

.overlay-control span {
    font-size: 14px;
    color: #333;
}

/* Update the layer control styles to ensure proper scrolling */
.mapboxgl-ctrl.layer-control {
    display: flex;
    flex-direction: column;
}

/* Ensure the overlay control stays at the top */
.layer-control > .overlay-control {
    flex-shrink: 0;
}

/* Update the container for the rest of the controls */
.layer-control > div:not(.overlay-control) {
    flex-grow: 1;
    overflow-y: auto;
}